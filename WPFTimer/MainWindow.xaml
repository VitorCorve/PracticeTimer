<Window x:Class="WPFTimer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFTimer"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:vm="clr-namespace:WPFTimer.ViewModel"
        xmlns:model="clr-namespace:WPFTimer.Model"
        mc:Ignorable="d"
        Title="Practice" Height="400" Width="780" ResizeMode="NoResize" WindowStyle="None" PreviewMouseLeftButtonDown="HeaderMenu_MouseDown" Background="Transparent">
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="MinHeight" Value="35"/>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="/Images/buttonBG.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="#FF0693B2" Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsMouseOver"  Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    From="1"
                                    To="0.5"
                                    Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Agency FB"/>
        </Style>
        <model:TimeTicksConverter x:Key="TickConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <MediaElement Grid.ColumnSpan="2" Source="/bgPlay.mp4" Stretch="Fill"/>
        <Grid HorizontalAlignment="Left" Margin="10" Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel>
                <TextBlock Text="Today" HorizontalAlignment="Left"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <TextBlock Text="{Binding CountService.Model.HoursToday, Converter={StaticResource TickConverter}}" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding CountService.Model.MinutesToday, StringFormat=:{0}, Converter={StaticResource TickConverter}}" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding CountService.Model.SecondsToday, StringFormat=:{0}, Converter={StaticResource TickConverter}}" HorizontalAlignment="Center"/>
                </StackPanel>
            </StackPanel>
            <Image x:Name="NotificationElement" Source="/Images/onPlay.png" Width="35" RenderTransformOrigin=".5,.5" IsEnabled="{Binding IsOnPlayImageEnabled}" Grid.Row="1" VerticalAlignment="Bottom">
                <Image.RenderTransform>
                    <RotateTransform Angle="0"/>
                </Image.RenderTransform>
                <Image.Style>
                    <Style>
                        <Style.Triggers>
                            <Trigger Property="Image.IsEnabled" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                    Storyboard.TargetProperty="RenderTransform.Angle"
                                    From="0"
                                    To="360"
                                    Duration="0:0:0.5"
                                    RepeatBehavior="Forever" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                    Storyboard.TargetProperty="RenderTransform.Angle"
                                    From="0"
                                    To="0"
                                    Duration="0:0:0.5"
                                    RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Grid>
        <Grid Grid.Column="1" HorizontalAlignment="Right" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel HorizontalAlignment="Right">
                <TextBlock Text="Total" HorizontalAlignment="Right"/>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding CountService.Model.HoursTotal, Converter={StaticResource TickConverter}}" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding CountService.Model.MinutesTotal, StringFormat=:{0}, Converter={StaticResource TickConverter}}" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding CountService.Model.SecondsTotal, StringFormat=:{0}, Converter={StaticResource TickConverter}}" HorizontalAlignment="Center"/>
                </StackPanel>
            </StackPanel>
            <TextBlock Text="{Binding CountService.Model.HoursInThisWeek, StringFormat=Hours in this week: {0}}" Grid.Row="1" HorizontalAlignment="Right"/>
            <TextBlock Text="{Binding CountService.Model.HoursInThisMonth, StringFormat=Hours in this month: {0}}" Grid.Row="2" HorizontalAlignment="Right"/>
            <TextBlock Text="{Binding CountService.Model.DaysTotal, StringFormat=Days total: {0}}" Grid.Row="3" HorizontalAlignment="Right"/>
            <TextBlock Text="{Binding CountService.Model.WeeksTotal, StringFormat=Weeks total: {0}}" Grid.Row="4" HorizontalAlignment="Right"/>
            <TextBlock Text="{Binding CountService.Model.MontsTotal, StringFormat=Monts total: {0}}" Grid.Row="5" HorizontalAlignment="Right"/>
            <Button 
                x:Name="EngageElement" 
                Grid.Row="6" Width="125" 
                Panel.ZIndex="1" 
                Height="50" 
                Content="{Binding Statement}" 
                Foreground="white" 
                BorderThickness="0" 
                BorderBrush="Transparent" 
                FontFamily="Agency FB"
                FontSize="16">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding Engage}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.InputBindings>
                    <KeyBinding Key="Space" Command="{Binding Engage}"/>
                    <KeyBinding Key="Esc" Command="{Binding Exit}"/>
                </Button.InputBindings>
                <Button.Background>
                    <ImageBrush ImageSource="/Images/buttonBG.png"/>
                </Button.Background>
            </Button>
        </Grid>
    </Grid>
</Window>
